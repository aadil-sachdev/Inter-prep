//LCS

#include<bits/stdc++.h>
using namespace std;


int findl(string s1,string s2,int **dp)
{
    if(s1.size()==0||s2.size()==0)
    {
        return 0;        
    }
    if(dp[s1.size()][s2.size()]>=0)
    {
        return dp[s1.size()][s2.size()];
    }
    if(s1[0]==s2[0])
    {
        int ans=findl(s1.substr(1),s2.substr(1),dp);
        dp[s1.size()][s2.size()]=ans+1;
        return ans+1;
    }
    int op1=findl(s1,s2.substr(1),dp);
    int op2=findl(s1.substr(1),s2,dp);
    dp[s1.size()][s2.size()]=max(op1,op2);
    return max(op1,op2);
}



int main()
{
    string s1;
    string s2;
    cin>>s1;
    cin>>s2;
    int n1=s1.size();
    int n2=s2.size();
    int **dp=new int*[n1+1];
    for(int i=0;i<=n1;i++)
    {
        dp[i]=new int[n2+1];
        for(int j=0;j<=n2;j++)
        {
            dp[i][j]=-1;
        }
    }
    int ans=findl(s1,s2,dp);
    cout<<ans;
    
}
