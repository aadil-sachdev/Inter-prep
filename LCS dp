//LCS dp 

#include<bits/stdc++.h>
using namespace std;

int lcs(string s1, string s2)
{
    int n1=s1.size();
    int n2=s2.size();
    int **dp=new int*[n1+1];
    for(int i=0;i<=n1;i++)
    {
        dp[i]=new int[n2+1];
    }
    for(int i=0;i<=n1;i++)
    {
        dp[i][0]=0;
    }
    for(int j=0;j<=n2;j++)
    {
        dp[0][j]=0;
    }
    for(int i=1;i<=n1;i++)
    {
        for(int j=1;j<=n2;j++)
        {
            if(s1[n1-i]==s2[n2-j])
            {
                dp[i][j]=dp[i-1][j-1]+1;
            }
            else
            {
                dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
            }
        }
    }
    return dp[n1][n2];
}



int main()
{
    string s1,s2;
    cin>>s1;
    cin>>s2;
    int ans=lcs(s1,s2);
    cout<<ans;
}
